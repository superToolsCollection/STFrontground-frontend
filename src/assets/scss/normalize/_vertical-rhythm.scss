//
// Vertical Rhythm
//
// This is the minimal amount of code needed to create vertical rhythm in our
// CSS. If you are looking for a robust solution, look at the excellent Typey
// library. @see https://github.com/jptaranto/typey

@function normalize-rhythm($value, $relative-to: $base-font-size, $unit: $base-unit) {
  @if unit($value) != px {
    @error "The normalize vertical-rhythm module only supports px inputs. The typey library is better.";
  }
  @if $unit == rem {
    @return ($value / $base-font-size) * 1rem;
  }
  @else if $unit == em {
    @return ($value / $relative-to) * 1em;
  }
  @else { // $unit == px
    @return $value;
  }
}

@mixin normalize-font-size($value, $relative-to: $base-font-size) {
  @if unit($value) != 'px' {
    @error "normalize-font-size() only supports px inputs. The typey library is better.";
  }
  font-size: normalize-rhythm($value, $relative-to);
}

@mixin normalize-rhythm($property, $values, $relative-to: $base-font-size) {
  $value-list: $values;
  $sep: space;
  @if type-of($values) == 'list' {
    $sep: list-separator($values);
  }
  @else {
    $value-list: append((), $values);
  }

  $normalized-values: ();
  @each $value in $value-list {
    @if unitless($value) and $value != 0 {
      $value: $value * normalize-rhythm($base-line-height, $relative-to);
    }
    $normalized-values: append($normalized-values, $value, $sep);
  }
  #{$property}: $normalized-values;
}

@mixin normalize-margin($values, $relative-to: $base-font-size) {
  @include normalize-rhythm(margin, $values, $relative-to);
}

@mixin normalize-line-height($font-size, $min-line-padding: 2px) {
  $lines: ceil($font-size / $base-line-height);
  // If lines are cramped include some extra leading.
  @if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {
    $lines: $lines + 1;
  }
  @include normalize-rhythm(line-height, $lines, $font-size);
}

// superTool项目添加的
@function vh($value){
  @return $value+px;
  // @return ($value*100/1444)+vw;
  // @return ($value*100/1024)+vh;
}
@function vw($value){
  @return $value+px;
  // @return ($value*100/1444)+vw;
}

// 占位符的颜色
@mixin placeholder-color($name:input, $color: rgba(212, 217, 226, 100)) {
  #{$name}::-webkit-input-placeholder{
    color:$color;
  }
  #{$name}::-moz-placeholder{   /* Mozilla Firefox 19+ */
    color:$color;
  }
  #{$name}:-moz-placeholder{    /* Mozilla Firefox 4 to 18 */
    color:$color;
  }
  #{$name}:-ms-input-placeholder{  /* Internet Explorer 10-11 */
    color:$color;
  }
}

// 鼠标停留时显示的图标，默认是 pointer即小手
@mixin hoverCursor($name:'&',$cursor:pointer,) {
  #{$name}:hover{
    cursor: $cursor;
  }
}

//输入界面提示输入信息格式有误
@mixin alertWrong($name,$child,$content:'请输入正确格式'){
  #{$name}::after{
    position: absolute;
    bottom: vh(-18);
    right: 0;
    height: vh(18);
  
    color: red;
  
    font-size: vh(12);
    line-height: vh(18);
    text-align: right;
    font-family: NotoSerifSC-Regular;
    content: $content;
  }

  #{$name} #{$child}{
    border-bottom-color: red;
}
}

//清浮动
@mixin clearFloat() {
   // 清浮动, 父元素计算高度时也把子元素的高度算进去
  &::after{
   content: "";
   display: block;
   clear: both;
   height: 0;/*兼容旧浏览器 */
   visibility: hidden;/*兼容旧浏览器 */
  }
  *zoom:1;/*兼容IE6~7浏览器 */
}

